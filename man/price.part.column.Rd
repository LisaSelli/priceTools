% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Price_functions.R
\name{price.part.column}
\alias{price.part.column}
\title{Wrapper function for applying Price partition to list of communities}
\usage{
price.part.column(sps, func, dat)
}
\arguments{
\item{sps}{A vector of species' names for the reference community}

\item{func}{A numerical vector of species' ecosystem functions in the reference
community}

\item{dat}{A grouped data frame of species' names and ecosystem functions, which 
must contain at least one grouping variable, as created by dplyr's function group_by(). 
Additionally, the species and function columns must be named 'species' and 'func', respectively.}
}
\value{
This function returns a data set of Price equation components, one full set
 for each community (uniquely identified by the grouping variable(s) of dat) compared 
 against the reference community
}
\description{
Given a list of species names and their ecosystem functions, this function generates
a reference community, and then compares the reference community against a set of
other communities (including species and their ecosystem function) supplied in a
separate, grouped data frame. This is a low-level function that invokes 
\code{price.part.single()} and is called by higher-level functions such as 
\code{pairwise.price()}, which automates the pairwise comparison of many communities.
}
\examples{

set.seed(36)
cm1<-data.frame(sps=LETTERS[seq(1,6)],func=rpois(6,lambda = 2))

# Data frame containing multiple communities we want to compare with cm1
cms<-data.frame(comm.id=sort(rep(seq(1,3),6)),
                species=rep(LETTERS[seq(1,6)],3),
                func=rpois(6*3,lambda = 2))
cms<-group_by(cms,comm.id)

# Compare species/functions of cm1 to all communities in cms, individually
price.part.column(sps=cm1$sps,func=cm1$func,dat=cms)

}

